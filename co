<?php

// routes/web.php
use Illuminate\Support\Facades\Route;
use App\Http\Controllers\AuthController;
use App\Http\Controllers\SuperAdminController;
use App\Http\Controllers\AdminDivisiController;
use App\Http\Controllers\KonsultasiController;

Route::get('/', [KonsultasiController::class, 'create']);
Route::post('/konsultasi', [KonsultasiController::class, 'store'])->name('konsultasi.store');

Route::get('/login', [AuthController::class, 'showLoginForm'])->name('login');
Route::post('/login', [AuthController::class, 'login']);
Route::post('/logout', [AuthController::class, 'logout'])->name('logout');

Route::middleware(['auth', 'role:superadmin'])->group(function () {
    Route::get('/superadmin', [SuperAdminController::class, 'index'])->name('superadmin.index');
    Route::post('/superadmin/admin-divisi', [SuperAdminController::class, 'storeAdminDivisi'])->name('superadmin.admin-divisi.store');
});

Route::middleware(['auth', 'role:admindivisi'])->group(function () {
    Route::get('/admin', [AdminDivisiController::class, 'index'])->name('admin.index');
    Route::post('/admin/{id}/terima', [AdminDivisiController::class, 'terima'])->name('admin.terima');
    Route::post('/admin/{id}/tolak', [AdminDivisiController::class, 'tolak'])->name('admin.tolak');
});


// app/Http/Controllers/AuthController.php
namespace App\Http\Controllers;

use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;

class AuthController extends Controller
{
    public function showLoginForm()
    {
        return view('auth.login');
    }

    public function login(Request $request)
    {
        $credentials = $request->only('email', 'password');

        if (Auth::attempt($credentials)) {
            if (Auth::user()->role === 'superadmin') {
                return redirect()->route('superadmin.index');
            } elseif (Auth::user()->role === 'admindivisi') {
                return redirect()->route('admin.index');
            }
        }
        return back()->withErrors(['email' => 'Login gagal']);
    }

    public function logout()
    {
        Auth::logout();
        return redirect('/login');
    }
}


// app/Http/Controllers/SuperAdminController.php
namespace App\Http\Controllers;

use App\Models\User;
use App\Models\Divisi;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Hash;

class SuperAdminController extends Controller
{
    public function index()
    {
        $divisis = Divisi::withCount('konsultasis')->get();
        return view('superadmin.index', compact('divisis'));
    }

    public function storeAdminDivisi(Request $request)
    {
        $validated = $request->validate([
            'nama' => 'required',
            'email' => 'required|email|unique:users,email',
            'password' => 'required|min:6',
        ]);

        $user = User::create([
            'name' => $validated['nama'],
            'email' => $validated['email'],
            'password' => Hash::make($validated['password']),
            'role' => 'admindivisi',
        ]);

        Divisi::create([
            'nama' => $validated['nama'],
            'user_id' => $user->id,
        ]);

        return back()->with('success', 'Admin divisi berhasil ditambahkan');
    }
}


// app/Http/Controllers/AdminDivisiController.php
namespace App\Http\Controllers;

use Illuminate\Support\Facades\Auth;
use App\Models\Konsultasi;
use App\Models\Divisi;

class AdminDivisiController extends Controller
{
    public function index()
    {
        $divisi = Divisi::where('user_id', Auth::id())->first();
        $konsultasis = Konsultasi::where('divisi_id', $divisi->id)->get();
        return view('admin.index', compact('konsultasis'));
    }

    public function terima($id)
    {
        $k = Konsultasi::findOrFail($id);
        $k->status = 'diterima';
        $k->save();
        return back();
    }

    public function tolak($id)
    {
        $k = Konsultasi::findOrFail($id);
        $k->status = 'ditolak';
        $k->save();
        return back();
    }
}


// app/Http/Controllers/KonsultasiController.php
namespace App\Http\Controllers;

use App\Models\Konsultasi;
use App\Models\Divisi;
use Illuminate\Http\Request;

class KonsultasiController extends Controller
{
    public function create()
    {
        $divisis = Divisi::all();
        return view('konsultasi.form', compact('divisis'));
    }

    public function store(Request $request)
    {
        $validated = $request->validate([
            'nama' => 'required',
            'email' => 'required|email',
            'no_whatsapp' => 'required',
            'divisi_id' => 'required|exists:divisis,id',
            'deskripsi' => 'required',
            'tanggal' => 'required|date',
            'waktu' => 'required',
        ]);

        $validated['status'] = 'menunggu';
        Konsultasi::create($validated);

        return redirect('/')->with('success', 'Form berhasil dikirim!');
    }
}


// app/Models/User.php
namespace App\Models;

use Illuminate\Foundation\Auth\User as Authenticatable;

class User extends Authenticatable
{
    protected $fillable = ['name', 'email', 'password', 'role'];

    public function divisi()
    {
        return $this->hasOne(Divisi::class);
    }
}


// app/Models/Divisi.php
namespace App\Models;

use Illuminate\Database\Eloquent\Model;

class Divisi extends Model
{
    protected $fillable = ['nama', 'user_id'];

    public function konsultasis()
    {
        return $this->hasMany(Konsultasi::class);
    }
}


// app/Models/Konsultasi.php
namespace App\Models;

use Illuminate\Database\Eloquent\Model;

class Konsultasi extends Model
{
    protected $fillable = ['nama', 'email', 'no_whatsapp', 'divisi_id', 'deskripsi', 'tanggal', 'waktu', 'status'];

    public function divisi()
    {
        return $this->belongsTo(Divisi::class);
    }
}


// middleware/RoleMiddleware.php (daftarkan di Kernel.php)
namespace App\Http\Middleware;

use Closure;
use Illuminate\Support\Facades\Auth;

class RoleMiddleware
{
    public function handle($request, Closure $next, $role)
    {
        if (Auth::check() && Auth::user()->role === $role) {
            return $next($request);
        }
        abort(403);
    }
}


// Super Admin Seeder
use App\Models\User;
User::create([
    'name' => 'Super Admin',
    'email' => 'sa@user.com',
    'password' => Hash::make('superadmin'),
    'role' => 'superadmin',
]);
